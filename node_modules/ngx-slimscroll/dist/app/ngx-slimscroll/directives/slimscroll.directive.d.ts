import { ViewContainerRef, OnChanges, OnDestroy, OnInit, Renderer2, EventEmitter, SimpleChanges } from '@angular/core';
import { SlimScrollOptions, ISlimScrollOptions } from '../classes/slimscroll-options.class';
import { ISlimScrollEvent, SlimScrollEvent } from '../classes/slimscroll-event.class';
import { ISlimScrollState } from '../classes/slimscroll-state.class';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare const easing: {
    [key: string]: Function;
};
export declare class SlimScrollDirective implements OnInit, OnChanges, OnDestroy {
    private viewContainer;
    private renderer;
    private document;
    private optionsDefaults;
    enabled: boolean;
    options: SlimScrollOptions;
    scrollEvents: EventEmitter<ISlimScrollEvent>;
    scrollChanged: EventEmitter<ISlimScrollState>;
    barVisibilityChange: EventEmitter<boolean>;
    el: HTMLElement;
    wrapper: HTMLElement;
    grid: HTMLElement;
    bar: HTMLElement;
    body: HTMLElement;
    pageY: number;
    top: number;
    dragging: boolean;
    mutationThrottleTimeout: number;
    mutationObserver: MutationObserver;
    lastTouchPositionY: number;
    visibleTimeout: any;
    interactionSubscriptions: Subscription;
    constructor(viewContainer: ViewContainerRef, renderer: Renderer2, document: any, optionsDefaults: ISlimScrollOptions);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    setup(): void;
    handleEvent(e: SlimScrollEvent): void;
    setStyle(): void;
    onMutation(): void;
    wrapContainer(): void;
    initGrid(): void;
    initBar(): void;
    getBarHeight(): void;
    scrollTo(y: number, duration: number, easingFunc: string): void;
    scrollContent(y: number, isWheel: boolean, isJump: boolean): null | number;
    initWheel: () => void;
    initDrag: () => void;
    showBarAndGrid(): void;
    hideBarAndGrid(): void;
    preventDefaultEvent: (e: MouseEvent) => void;
    destroy(): void;
    unwrap(wrapper: HTMLElement): void;
    onResize($event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlimScrollDirective, [null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SlimScrollDirective, "[slimScroll]", ["slimScroll"], { "enabled": "enabled"; "options": "options"; "scrollEvents": "scrollEvents"; }, { "scrollChanged": "scrollChanged"; "barVisibilityChange": "barVisibilityChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpbXNjcm9sbC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsic2xpbXNjcm9sbC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGFpbmVyUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIsIEV2ZW50RW1pdHRlciwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2xpbVNjcm9sbE9wdGlvbnMsIElTbGltU2Nyb2xsT3B0aW9ucyB9IGZyb20gJy4uL2NsYXNzZXMvc2xpbXNjcm9sbC1vcHRpb25zLmNsYXNzJztcbmltcG9ydCB7IElTbGltU2Nyb2xsRXZlbnQsIFNsaW1TY3JvbGxFdmVudCB9IGZyb20gJy4uL2NsYXNzZXMvc2xpbXNjcm9sbC1ldmVudC5jbGFzcyc7XG5pbXBvcnQgeyBJU2xpbVNjcm9sbFN0YXRlIH0gZnJvbSAnLi4vY2xhc3Nlcy9zbGltc2Nyb2xsLXN0YXRlLmNsYXNzJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgZWFzaW5nOiB7XG4gICAgW2tleTogc3RyaW5nXTogRnVuY3Rpb247XG59O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpbVNjcm9sbERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lcjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZG9jdW1lbnQ7XG4gICAgcHJpdmF0ZSBvcHRpb25zRGVmYXVsdHM7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgICBvcHRpb25zOiBTbGltU2Nyb2xsT3B0aW9ucztcbiAgICBzY3JvbGxFdmVudHM6IEV2ZW50RW1pdHRlcjxJU2xpbVNjcm9sbEV2ZW50PjtcbiAgICBzY3JvbGxDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8SVNsaW1TY3JvbGxTdGF0ZT47XG4gICAgYmFyVmlzaWJpbGl0eUNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xuICAgIGVsOiBIVE1MRWxlbWVudDtcbiAgICB3cmFwcGVyOiBIVE1MRWxlbWVudDtcbiAgICBncmlkOiBIVE1MRWxlbWVudDtcbiAgICBiYXI6IEhUTUxFbGVtZW50O1xuICAgIGJvZHk6IEhUTUxFbGVtZW50O1xuICAgIHBhZ2VZOiBudW1iZXI7XG4gICAgdG9wOiBudW1iZXI7XG4gICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgbXV0YXRpb25UaHJvdHRsZVRpbWVvdXQ6IG51bWJlcjtcbiAgICBtdXRhdGlvbk9ic2VydmVyOiBNdXRhdGlvbk9ic2VydmVyO1xuICAgIGxhc3RUb3VjaFBvc2l0aW9uWTogbnVtYmVyO1xuICAgIHZpc2libGVUaW1lb3V0OiBhbnk7XG4gICAgaW50ZXJhY3Rpb25TdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZG9jdW1lbnQ6IGFueSwgb3B0aW9uc0RlZmF1bHRzOiBJU2xpbVNjcm9sbE9wdGlvbnMpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBzZXR1cCgpOiB2b2lkO1xuICAgIGhhbmRsZUV2ZW50KGU6IFNsaW1TY3JvbGxFdmVudCk6IHZvaWQ7XG4gICAgc2V0U3R5bGUoKTogdm9pZDtcbiAgICBvbk11dGF0aW9uKCk6IHZvaWQ7XG4gICAgd3JhcENvbnRhaW5lcigpOiB2b2lkO1xuICAgIGluaXRHcmlkKCk6IHZvaWQ7XG4gICAgaW5pdEJhcigpOiB2b2lkO1xuICAgIGdldEJhckhlaWdodCgpOiB2b2lkO1xuICAgIHNjcm9sbFRvKHk6IG51bWJlciwgZHVyYXRpb246IG51bWJlciwgZWFzaW5nRnVuYzogc3RyaW5nKTogdm9pZDtcbiAgICBzY3JvbGxDb250ZW50KHk6IG51bWJlciwgaXNXaGVlbDogYm9vbGVhbiwgaXNKdW1wOiBib29sZWFuKTogbnVsbCB8IG51bWJlcjtcbiAgICBpbml0V2hlZWw6ICgpID0+IHZvaWQ7XG4gICAgaW5pdERyYWc6ICgpID0+IHZvaWQ7XG4gICAgc2hvd0JhckFuZEdyaWQoKTogdm9pZDtcbiAgICBoaWRlQmFyQW5kR3JpZCgpOiB2b2lkO1xuICAgIHByZXZlbnREZWZhdWx0RXZlbnQ6IChlOiBNb3VzZUV2ZW50KSA9PiB2b2lkO1xuICAgIGRlc3Ryb3koKTogdm9pZDtcbiAgICB1bndyYXAod3JhcHBlcjogSFRNTEVsZW1lbnQpOiB2b2lkO1xuICAgIG9uUmVzaXplKCRldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==