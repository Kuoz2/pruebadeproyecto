"use strict";
var core_1 = require('@angular/core');
var forms_1 = require('@angular/forms');
var rut_helpers_1 = require('rut-helpers');
function validateRutFactory(rutValidate) {
    return function (c) {
        return rutValidate(c.value) ? null : { invalidRut: true };
    };
}
exports.validateRutFactory = validateRutFactory;
var ɵngcc0 = require('@angular/core');
var RutValidator = (function () {
    function RutValidator() {
        this.validator = validateRutFactory(rut_helpers_1.rutValidate);
    }
    RutValidator.prototype.validate = function (c) {
        return this.validator(c);
    };
    /** @nocollapse */
    RutValidator.ctorParameters = function () { return []; };
RutValidator.ɵfac = function RutValidator_Factory(t) { return new (t || RutValidator)(); };
RutValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RutValidator, selectors: [["", "validateRut", "", "ngModel", ""], ["", "validateRut", "", "formControl", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: forms_1.NG_VALIDATORS, useExisting: core_1.forwardRef(function () { return RutValidator; }), multi: true },
        ])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RutValidator, [{
        type: core_1.Directive,
        args: [{
                selector: '[validateRut][ngModel],[validateRut][formControl]',
                providers: [
                    { provide: forms_1.NG_VALIDATORS, useExisting: core_1.forwardRef(function () { return RutValidator; }), multi: true },
                ]
            }]
    }], function () { return []; }, null); })();
    return RutValidator;
}());
exports.RutValidator = RutValidator;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnV0LnZhbGlkYXRvci5qcyIsInNvdXJjZXMiOlsicnV0LnZhbGlkYXRvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQVFNO0FBQ047QUFDQTs7Ozs7Ozs7Ozs7OztnREFBNkQ7QUFDN0Q7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgY29yZV8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpO1xudmFyIGZvcm1zXzEgPSByZXF1aXJlKCdAYW5ndWxhci9mb3JtcycpO1xudmFyIHJ1dF9oZWxwZXJzXzEgPSByZXF1aXJlKCdydXQtaGVscGVycycpO1xuZnVuY3Rpb24gdmFsaWRhdGVSdXRGYWN0b3J5KHJ1dFZhbGlkYXRlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjKSB7XG4gICAgICAgIHJldHVybiBydXRWYWxpZGF0ZShjLnZhbHVlKSA/IG51bGwgOiB7IGludmFsaWRSdXQ6IHRydWUgfTtcbiAgICB9O1xufVxuZXhwb3J0cy52YWxpZGF0ZVJ1dEZhY3RvcnkgPSB2YWxpZGF0ZVJ1dEZhY3Rvcnk7XG52YXIgUnV0VmFsaWRhdG9yID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSdXRWYWxpZGF0b3IoKSB7XG4gICAgICAgIHRoaXMudmFsaWRhdG9yID0gdmFsaWRhdGVSdXRGYWN0b3J5KHJ1dF9oZWxwZXJzXzEucnV0VmFsaWRhdGUpO1xuICAgIH1cbiAgICBSdXRWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRhdG9yKGMpO1xuICAgIH07XG4gICAgUnV0VmFsaWRhdG9yLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogY29yZV8xLkRpcmVjdGl2ZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdbdmFsaWRhdGVSdXRdW25nTW9kZWxdLFt2YWxpZGF0ZVJ1dF1bZm9ybUNvbnRyb2xdJyxcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IGZvcm1zXzEuTkdfVkFMSURBVE9SUywgdXNlRXhpc3Rpbmc6IGNvcmVfMS5mb3J3YXJkUmVmKGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJ1dFZhbGlkYXRvcjsgfSksIG11bHRpOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxdIH0sXG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi9cbiAgICBSdXRWYWxpZGF0b3IuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXTsgfTtcbiAgICByZXR1cm4gUnV0VmFsaWRhdG9yO1xufSgpKTtcbmV4cG9ydHMuUnV0VmFsaWRhdG9yID0gUnV0VmFsaWRhdG9yO1xuIl19