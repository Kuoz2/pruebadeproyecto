{"version":3,"file":"express-engine.js","sources":["../src/file-loader.ts","../src/main.ts","../express-engine_public_index.ts"],"names":["fs.readFile","fs.readFileSync"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { Request, Response } from 'express';\n\nimport { NgModuleFactory, Type, CompilerFactory, Compiler, StaticProvider } from '@angular/core';\nimport { ResourceLoader } from '@angular/compiler';\nimport {\n  INITIAL_CONFIG,\n  renderModuleFactory,\n  platformDynamicServer\n} from '@angular/platform-server';\n\nimport { FileLoader } from './file-loader';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: Response;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * Map of Module Factories\n */\nconst factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: NgSetupOptions) {\n\n  const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n  const compiler: Compiler = compilerFactory.createCompiler([\n    {\n      providers: [\n        { provide: ResourceLoader, useClass: FileLoader, deps: [] }\n      ]\n    }\n  ]);\n\n  return function (filePath: string,\n                   options: RenderOptions,\n                   callback: (err?: Error | null, html?: string) => void) {\n\n    options.providers = options.providers || [];\n\n    try {\n      const moduleOrFactory = options.bootstrap || setupOptions.bootstrap;\n\n      if (!moduleOrFactory) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      setupOptions.providers = setupOptions.providers || [];\n\n      const req = options.req;\n      const extraProviders = setupOptions.providers.concat(\n        options.providers,\n        getReqResProviders(options.req, options.res),\n        [\n          {\n            provide: INITIAL_CONFIG,\n            useValue: {\n              document: options.document || getDocument(filePath),\n              url: options.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`\n            }\n          }\n        ]);\n\n      getFactory(moduleOrFactory, compiler)\n        .then(factory => {\n          return renderModuleFactory(factory, {\n            extraProviders\n          });\n        })\n        .then((html: string) => {\n          callback(null, html);\n        }, (err) => {\n          callback(err);\n        });\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get a factory from a bootstrapped module/ module factory\n */\nfunction getFactory(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>, compiler: Compiler\n): Promise<NgModuleFactory<{}>> {\n  return new Promise<NgModuleFactory<{}>>((resolve, reject) => {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      resolve(moduleOrFactory);\n      return;\n    } else {\n      let moduleFactory = factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        resolve(moduleFactory);\n        return;\n      }\n\n      // Compile the module and cache it\n      compiler.compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          factoryCacheMap.set(moduleOrFactory, factory);\n          resolve(factory);\n        }, (err => {\n          reject(err);\n        }));\n    }\n  });\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}