/**
 * Service to check if the provided id is unique
 */
import * as ɵngcc0 from '@angular/core';
export declare class IdValidatorService {
    ids: Map<any, any>;
    /**
     * Method to check and reserve an id for the current instance of the library.
     * In this way, no other instances can use the same id.
     * @param galleryId number or undefined that represents the unique id of the gallery.
     * @return boolean true if success. false is never returned, instead an exception is thrown
     * @throws a error with a message if galleryId is neither unique, < 0 or an integer
     */
    checkAndAdd(galleryId: number | undefined): boolean;
    /**
     * Method to remove a reserved id. In this way you are able to use the id again for another instance of the library.
     * @param galleryId number or undefined that represents the unique id of the gallery.
     * @return boolean true if success. false is never returned, instead an exception is thrown
     * @throws a error with a message if galleryId is neither integer or < 0
     */
    remove(galleryId: number | undefined): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IdValidatorService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IdValidatorService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWQtdmFsaWRhdG9yLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiaWQtdmFsaWRhdG9yLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlcnZpY2UgdG8gY2hlY2sgaWYgdGhlIHByb3ZpZGVkIGlkIGlzIHVuaXF1ZVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZFZhbGlkYXRvclNlcnZpY2Uge1xuICAgIGlkczogTWFwPGFueSwgYW55PjtcbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gY2hlY2sgYW5kIHJlc2VydmUgYW4gaWQgZm9yIHRoZSBjdXJyZW50IGluc3RhbmNlIG9mIHRoZSBsaWJyYXJ5LlxuICAgICAqIEluIHRoaXMgd2F5LCBubyBvdGhlciBpbnN0YW5jZXMgY2FuIHVzZSB0aGUgc2FtZSBpZC5cbiAgICAgKiBAcGFyYW0gZ2FsbGVyeUlkIG51bWJlciBvciB1bmRlZmluZWQgdGhhdCByZXByZXNlbnRzIHRoZSB1bmlxdWUgaWQgb2YgdGhlIGdhbGxlcnkuXG4gICAgICogQHJldHVybiBib29sZWFuIHRydWUgaWYgc3VjY2Vzcy4gZmFsc2UgaXMgbmV2ZXIgcmV0dXJuZWQsIGluc3RlYWQgYW4gZXhjZXB0aW9uIGlzIHRocm93blxuICAgICAqIEB0aHJvd3MgYSBlcnJvciB3aXRoIGEgbWVzc2FnZSBpZiBnYWxsZXJ5SWQgaXMgbmVpdGhlciB1bmlxdWUsIDwgMCBvciBhbiBpbnRlZ2VyXG4gICAgICovXG4gICAgY2hlY2tBbmRBZGQoZ2FsbGVyeUlkOiBudW1iZXIgfCB1bmRlZmluZWQpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byByZW1vdmUgYSByZXNlcnZlZCBpZC4gSW4gdGhpcyB3YXkgeW91IGFyZSBhYmxlIHRvIHVzZSB0aGUgaWQgYWdhaW4gZm9yIGFub3RoZXIgaW5zdGFuY2Ugb2YgdGhlIGxpYnJhcnkuXG4gICAgICogQHBhcmFtIGdhbGxlcnlJZCBudW1iZXIgb3IgdW5kZWZpbmVkIHRoYXQgcmVwcmVzZW50cyB0aGUgdW5pcXVlIGlkIG9mIHRoZSBnYWxsZXJ5LlxuICAgICAqIEByZXR1cm4gYm9vbGVhbiB0cnVlIGlmIHN1Y2Nlc3MuIGZhbHNlIGlzIG5ldmVyIHJldHVybmVkLCBpbnN0ZWFkIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd25cbiAgICAgKiBAdGhyb3dzIGEgZXJyb3Igd2l0aCBhIG1lc3NhZ2UgaWYgZ2FsbGVyeUlkIGlzIG5laXRoZXIgaW50ZWdlciBvciA8IDBcbiAgICAgKi9cbiAgICByZW1vdmUoZ2FsbGVyeUlkOiBudW1iZXIgfCB1bmRlZmluZWQpOiBib29sZWFuO1xufVxuIl19