import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
import { Image } from '../model/image.class';
/**
 * Directive to add an image to an `<a>` tag with some additional custom properties.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ATagBgImageDirective implements OnInit, OnChanges {
    private renderer;
    private el;
    /**
     * Object of type `Image` that represents the image to add to the `<a>` tag.
     */
    image: Image;
    /**
     * Additional style to customize the background attribute.
     * Empty string by default.
     */
    style: string;
    constructor(renderer: Renderer2, el: ElementRef);
    /**
     * Method ´ngOnInit´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called only one time!!!
     */
    ngOnInit(): void;
    /**
     * Method ´ngOnChanges´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called when any data-bound property of a directive changes!!!
     */
    ngOnChanges(): void;
    /**
     * Private method to add an image as background of an `<a>` tag.
     */
    private applyStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ATagBgImageDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ATagBgImageDirective, "[ksATagBgImage]", never, { "image": "image"; "style": "style"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYS10YWctYmctaW1hZ2UuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImEtdGFnLWJnLWltYWdlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uL21vZGVsL2ltYWdlLmNsYXNzJztcbi8qKlxuICogRGlyZWN0aXZlIHRvIGFkZCBhbiBpbWFnZSB0byBhbiBgPGE+YCB0YWcgd2l0aCBzb21lIGFkZGl0aW9uYWwgY3VzdG9tIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFUYWdCZ0ltYWdlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICAvKipcbiAgICAgKiBPYmplY3Qgb2YgdHlwZSBgSW1hZ2VgIHRoYXQgcmVwcmVzZW50cyB0aGUgaW1hZ2UgdG8gYWRkIHRvIHRoZSBgPGE+YCB0YWcuXG4gICAgICovXG4gICAgaW1hZ2U6IEltYWdlO1xuICAgIC8qKlxuICAgICAqIEFkZGl0aW9uYWwgc3R5bGUgdG8gY3VzdG9taXplIHRoZSBiYWNrZ3JvdW5kIGF0dHJpYnV0ZS5cbiAgICAgKiBFbXB0eSBzdHJpbmcgYnkgZGVmYXVsdC5cbiAgICAgKi9cbiAgICBzdHlsZTogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsOiBFbGVtZW50UmVmKTtcbiAgICAvKipcbiAgICAgKiBNZXRob2QgwrRuZ09uSW5pdMK0IHRvIGFwcGx5IHRoZSBzdHlsZSBvZiB0aGlzIGRpcmVjdGl2ZS5cbiAgICAgKiBUaGlzIGlzIGFuIEFuZ3VsYXIncyBsaWZlY3ljbGUgaG9vaywgc28gaXRzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IEFuZ3VsYXIgaXRzZWxmLlxuICAgICAqIEluIHBhcnRpY3VsYXIsIGl0J3MgY2FsbGVkIG9ubHkgb25lIHRpbWUhISFcbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIE1ldGhvZCDCtG5nT25DaGFuZ2VzwrQgdG8gYXBwbHkgdGhlIHN0eWxlIG9mIHRoaXMgZGlyZWN0aXZlLlxuICAgICAqIFRoaXMgaXMgYW4gQW5ndWxhcidzIGxpZmVjeWNsZSBob29rLCBzbyBpdHMgY2FsbGVkIGF1dG9tYXRpY2FsbHkgYnkgQW5ndWxhciBpdHNlbGYuXG4gICAgICogSW4gcGFydGljdWxhciwgaXQncyBjYWxsZWQgd2hlbiBhbnkgZGF0YS1ib3VuZCBwcm9wZXJ0eSBvZiBhIGRpcmVjdGl2ZSBjaGFuZ2VzISEhXG4gICAgICovXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBQcml2YXRlIG1ldGhvZCB0byBhZGQgYW4gaW1hZ2UgYXMgYmFja2dyb3VuZCBvZiBhbiBgPGE+YCB0YWcuXG4gICAgICovXG4gICAgcHJpdmF0ZSBhcHBseVN0eWxlO1xufVxuIl19