import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
/**
 * Directive to change the flex-wrap css property of an element.
 */
import * as ɵngcc0 from '@angular/core';
export declare class WrapDirective implements OnInit, OnChanges {
    private renderer;
    private el;
    /**
     * Boolean input that it's true to add 'flex-wrap: wrap', 'flex-wrap: nowrap' otherwise.
     */
    wrap: boolean;
    /**
     * String input to force the width of the element to be able to see wrapping.
     */
    width: string;
    constructor(renderer: Renderer2, el: ElementRef);
    /**
     * Method ´ngOnInit´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called only one time!!!
     */
    ngOnInit(): void;
    /**
     * Method ´ngOnChanges´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called when any data-bound property of a directive changes!!!
     */
    ngOnChanges(): void;
    /**
     * Private method to change both widht and flex-wrap css properties.
     */
    private applyStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<WrapDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<WrapDirective, "[ksWrap]", never, { "wrap": "wrap"; "width": "width"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsid3JhcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIERpcmVjdGl2ZSB0byBjaGFuZ2UgdGhlIGZsZXgtd3JhcCBjc3MgcHJvcGVydHkgb2YgYW4gZWxlbWVudC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgV3JhcERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZWw7XG4gICAgLyoqXG4gICAgICogQm9vbGVhbiBpbnB1dCB0aGF0IGl0J3MgdHJ1ZSB0byBhZGQgJ2ZsZXgtd3JhcDogd3JhcCcsICdmbGV4LXdyYXA6IG5vd3JhcCcgb3RoZXJ3aXNlLlxuICAgICAqL1xuICAgIHdyYXA6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogU3RyaW5nIGlucHV0IHRvIGZvcmNlIHRoZSB3aWR0aCBvZiB0aGUgZWxlbWVudCB0byBiZSBhYmxlIHRvIHNlZSB3cmFwcGluZy5cbiAgICAgKi9cbiAgICB3aWR0aDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsOiBFbGVtZW50UmVmKTtcbiAgICAvKipcbiAgICAgKiBNZXRob2QgwrRuZ09uSW5pdMK0IHRvIGFwcGx5IHRoZSBzdHlsZSBvZiB0aGlzIGRpcmVjdGl2ZS5cbiAgICAgKiBUaGlzIGlzIGFuIEFuZ3VsYXIncyBsaWZlY3ljbGUgaG9vaywgc28gaXRzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IEFuZ3VsYXIgaXRzZWxmLlxuICAgICAqIEluIHBhcnRpY3VsYXIsIGl0J3MgY2FsbGVkIG9ubHkgb25lIHRpbWUhISFcbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIE1ldGhvZCDCtG5nT25DaGFuZ2VzwrQgdG8gYXBwbHkgdGhlIHN0eWxlIG9mIHRoaXMgZGlyZWN0aXZlLlxuICAgICAqIFRoaXMgaXMgYW4gQW5ndWxhcidzIGxpZmVjeWNsZSBob29rLCBzbyBpdHMgY2FsbGVkIGF1dG9tYXRpY2FsbHkgYnkgQW5ndWxhciBpdHNlbGYuXG4gICAgICogSW4gcGFydGljdWxhciwgaXQncyBjYWxsZWQgd2hlbiBhbnkgZGF0YS1ib3VuZCBwcm9wZXJ0eSBvZiBhIGRpcmVjdGl2ZSBjaGFuZ2VzISEhXG4gICAgICovXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBQcml2YXRlIG1ldGhvZCB0byBjaGFuZ2UgYm90aCB3aWRodCBhbmQgZmxleC13cmFwIGNzcyBwcm9wZXJ0aWVzLlxuICAgICAqL1xuICAgIHByaXZhdGUgYXBwbHlTdHlsZTtcbn1cbiJdfQ==